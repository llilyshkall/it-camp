/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–æ–¥—É–ª–µ–π
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –≤—ã–∑–æ–≤–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
 */

// ===== –ü–†–ò–ú–ï–† 1: –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ =====

// –ü—Ä–æ—Å—Ç–æ–π –≤—ã–∑–æ–≤ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
function basicUsage() {
  console.log('=== –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ===');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —á–µ–∫-–ª–∏—Å—Ç—É
  window.moduleHandlers.startAssurance();
  window.moduleHandlers.checkResult();
  window.moduleHandlers.downloadAssurance();
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–º–µ—á–∞–Ω–∏–π
  window.moduleHandlers.startRemarks();
  window.moduleHandlers.downloadRemarks();
  
  // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
  window.moduleHandlers.makeProtocol();
}

// ===== –ü–†–ò–ú–ï–† 2: –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ =====

function advancedUsage() {
  console.log('=== –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ===');
  
  // –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
  window.moduleHandlers.startAssurance(null, {
    priority: 'high',
    notifyOnComplete: true,
    customOption: 'value'
  });
  
  // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –≤ PDF —Ñ–æ—Ä–º–∞—Ç–µ
  window.moduleHandlers.downloadAssurance(null, {
    format: 'pdf',
    includeChecklist: true,
    includeMetadata: true
  });
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–º–µ—á–∞–Ω–∏–π —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
  window.moduleHandlers.startRemarks(null, {
    normalizeExcel: true,
    generateRegistry: true,
    outputFormat: 'xlsx'
  });
  
  // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —Å —à–∞–±–ª–æ–Ω–æ–º
  window.moduleHandlers.makeProtocol(null, {
    format: 'pdf',
    template: 'custom',
    language: 'en',
    includeAttachments: false
  });
}

// ===== –ü–†–ò–ú–ï–† 3: –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ =====

function programmaticUsage() {
  console.log('=== –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ===');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
  if (window.moduleHandlers) {
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã');
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:', Object.keys(window.moduleHandlers));
  } else {
    console.error('‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç
  if (window.currentProject) {
    console.log('üìÅ –¢–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç:', window.currentProject.name);
  } else {
    console.warn('‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω');
  }
  
  // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
  const options = {
    testMode: true,
    mockResponse: { success: true, data: { test: 'data' } }
  };
  
  // –ú–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –±–µ–∑ —Å–æ–±—ã—Ç–∏—è
  window.moduleHandlers.startAssurance(null, options);
}

// ===== –ü–†–ò–ú–ï–† 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π =====

function eventHandling() {
  console.log('=== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π ===');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
  const startButton = document.getElementById('start-assurance');
  if (startButton) {
    startButton.addEventListener('click', (event) => {
      console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É"');
      
      // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      window.moduleHandlers.startAssurance(event, {
        priority: 'normal',
        notifyOnComplete: true,
        source: 'button_click'
      });
    });
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  const checkButton = document.getElementById('check-result');
  if (checkButton) {
    checkButton.addEventListener('click', (event) => {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
      
      window.moduleHandlers.checkResult(event, {
        includeDetails: true,
        format: 'detailed',
        refreshCache: false
      });
    });
  }
}

// ===== –ü–†–ò–ú–ï–† 5: –ö–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ =====

function customHandlers() {
  console.log('=== –ö–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ===');
  
  // –°–æ–∑–¥–∞—ë–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  function customAssuranceHandler(event, options = {}) {
    console.log('üéØ –ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞—à—É—Ä–µ–Ω—Å–∞');
    
    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!window.currentProject) {
      window.moduleHandlers.showToast('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç', false);
      return;
    }
    
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    console.log('üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', options);
    console.log('üìÅ –ü—Ä–æ–µ–∫—Ç:', window.currentProject);
    
    // –í—ã–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const enhancedOptions = {
      ...options,
      customHandler: true,
      timestamp: new Date().toISOString(),
      sessionId: Math.random().toString(36).substr(2, 9)
    };
    
    window.moduleHandlers.startAssurance(event, enhancedOptions);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
  window.moduleHandlers.customAssurance = customAssuranceHandler;
  
  console.log('‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω');
}

// ===== –ü–†–ò–ú–ï–† 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞ =====

function testingAndDebug() {
  console.log('=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞ ===');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API
  const testOptions = {
    testMode: true,
    mockResponse: {
      success: true,
      data: {
        testId: 'test_' + Math.random().toString(36).substr(2, 9),
        status: 'completed',
        message: '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç'
      }
    }
  };
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...');
  
  try {
    window.moduleHandlers.startAssurance(null, testOptions);
    window.moduleHandlers.checkResult(null, testOptions);
    window.moduleHandlers.downloadAssurance(null, testOptions);
    window.moduleHandlers.startRemarks(null, testOptions);
    window.moduleHandlers.downloadRemarks(null, testOptions);
    window.moduleHandlers.makeProtocol(null, testOptions);
    
    console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò–ú–ï–†–û–í =====

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
function runAllExamples() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–æ–¥—É–ª–µ–π');
  console.log('==================================================');
  
  // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      setTimeout(runExamples, 1000); // –î–∞—ë–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    });
  } else {
    setTimeout(runExamples, 1000);
  }
}

function runExamples() {
  try {
    basicUsage();
    setTimeout(advancedUsage, 500);
    setTimeout(programmaticUsage, 1000);
    setTimeout(eventHandling, 1500);
    setTimeout(customHandlers, 2000);
    setTimeout(testingAndDebug, 2500);
    
    console.log('üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤:', error);
  }
}

// –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞
if (typeof window !== 'undefined') {
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  setTimeout(runAllExamples, 2000);
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    basicUsage,
    advancedUsage,
    programmaticUsage,
    eventHandling,
    customHandlers,
    testingAndDebug,
    runAllExamples
  };
}
