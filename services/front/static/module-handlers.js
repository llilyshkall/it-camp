/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –≤ –º–æ–¥—É–ª—è—Ö
 * –ì–æ—Ç–æ–≤—ã –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ backend API
 */
import { endpoints } from './config.js';
// ===== –ú–û–î–£–õ–¨ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —á–µ–∫-–ª–∏—Å—Ç—É =====


/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø–æ–ø–∞–ø–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"
 * @param {String} name - –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞
 * @param {String} desc - –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
 */
async function createProject(name, desc) {
  console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...');
  
  const requestData = {
    name: name,
    description: desc
  };

  const saveBtn = document.getElementById('save-project');
  if (saveBtn) {
    saveBtn.disabled = true;
    saveBtn.classList.add('loading');
  }

  try {
    const response = await fetch(endpoints.basicProjects, { 
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestData)
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞');
    }

    const data = await response.json();
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω:', data);
    showToast('–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω', true);
    return data;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:', error);
    showToast(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç', false);
    throw error;
  } finally {
    if (saveBtn) {
      saveBtn.disabled = false;
      saveBtn.classList.remove('loading');
    }
  }
}
  
/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–æ–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —á–µ–∫–ª–∏—Å—Ç–∞ 
 * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 */
async function sendAssuranceDocuments(event, options = {}) {
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —á–µ–∫-–ª–∏—Å—Ç—É...');
  
  const fileInput = document.getElementById('file-input');
  const files = fileInput.files;
  
  if (!files || files.length === 0) {
    showToast('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏', false);
    return;
  }
  
  const loadingIndicator = document.getElementById('assurance-loading');
  const startBtn = document.getElementById('start-assurance');
  const progressBar = document.getElementById('upload-progress'); // –î–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  
  startBtn.disabled = true;
  startBtn.classList.add('loading');
  loadingIndicator.hidden = false;
  if (progressBar) {
    progressBar.max = files.length;
    progressBar.value = 0;
    progressBar.hidden = false;
  }

  try {
    // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      
      if (!file) {
        console.warn(`–§–∞–π–ª ${i} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        continue;
      }
      
      const formData = new FormData();
      formData.append('file', file);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
      if (progressBar) {
        progressBar.value = i;
        progressBar.textContent = `${i+1}/${files.length} ${file.name}`;
      }
      
      console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ ${i+1}/${files.length}: ${file.name}`);
      showToast(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ ${i+1}/${files.length}...`, true);
      
      const response = await fetch(
        `${endpoints.loadFile}${options.projectID}${endpoints.loadFileDocumentation}`, 
        {
          method: 'POST',
          body: formData
        }
      );
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(`–û—à–∏–±–∫–∞ —Ñ–∞–π–ª–∞ ${file.name}: ${errorData.message || response.statusText}`);
      }
      
      const result = await response.json();
      console.log(`‚úÖ –§–∞–π–ª ${file.name} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:`, result);
    }
    
    showToast(`–í—Å–µ —Ñ–∞–π–ª—ã (${files.length}) —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã`, true);
    console.log('‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã');
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    document.getElementById('check-result').disabled = false;
    document.getElementById('download-assurance').disabled = false;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤:', error);
    showToast(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤', false);
    throw error;
    
  } finally {
    startBtn.disabled = false;
    startBtn.classList.remove('loading');
    loadingIndicator.hidden = true;
    if (progressBar) {
      progressBar.hidden = true;
    }
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∞—à—É—Ä–∞–Ω—Å–∞"
 * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 */
async function handleStartAssurance(event, options = {}) {
  console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É');
  
  const requestData = {
  };

  const saveBtn = document.getElementById('start-assurance');
  if (saveBtn) {
    saveBtn.disabled = true;
    saveBtn.classList.add('loading');
  }

  try {
    const response = await fetch(
      `${endpoints.projects}${options.projectID}${endpoints.startDocCheck}`, 
      { 
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestData)
    });

    if (response.status === 404) {
          throw new Error('404 –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
      if (response.status === 409) {
          throw new Error('409 –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }

      if (!response.ok) {
          throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞! –°—Ç–∞—Ç—É—Å: ${response.status}`);  
        }

    const data = await response.json();
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–∞:', data);
    showToast('–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–∞', true);
    return data;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω—Ü–∏–∏:', error);
    const errorMessages = {
      '404': '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      '409': '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      'default': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª'
    };

    const errorMessage = errorMessages[error.message.match(/404|409/)?.[0]] || errorMessages.default;
    showToast(errorMessage, false);
  } finally {
    if (saveBtn) {
      saveBtn.disabled = false;
      saveBtn.classList.remove('loading');
    }
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å –æ—Ç—á—ë—Ç"
 * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 */
async function handleDownloadAssurance(event, options = {}) {
  console.log('üì• –°–∫–∞—á–∏–≤–∞–µ–º –æ—Ç—á—ë—Ç...');
  
  const downloadBtn = document.getElementById('download-assurance');
  if (downloadBtn) {
    downloadBtn.disabled = true;
    downloadBtn.classList.add('loading');
  }

  const url = endpoints.projects + options.projectID + "/checklist";
  try {
    const response = await fetch(url, {
      method: 'GET',
      headers: {
        'Accept': 'application/octet-stream'
      }
    });

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 404 –æ—à–∏–±–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ  
    if (response.status === 404) {
      throw new Error('404 –û—Ç—á—ë—Ç–∞ –Ω–µ—Ç');
    }
    if (response.status === 409) {
      throw new Error('409 –û—Ç—á—ë—Ç –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞! –°—Ç–∞—Ç—É—Å: ${response.status}`);  
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Content-Disposition  
    const contentDisposition = response.headers.get('Content-Disposition');
    let filename = 'report.xlsx'; // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é  
    if (contentDisposition) {
      const filenameMatch = contentDisposition.match(/filename="?(.+)"?/);
      if (filenameMatch) filename = filenameMatch[1];
    }

    // –ü–æ–ª—É—á–∞–µ–º blob  
    const blob = await response.blob();
    
    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è  
    const downloadUrl = window.URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = downloadUrl;
    link.download = filename;
    link.style.display = 'none';
    document.body.appendChild(link);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ  
    link.click();
    
    // –û—á–∏—â–∞–µ–º  
    setTimeout(() => {
      document.body.removeChild(link);
      window.URL.revokeObjectURL(downloadUrl);
    }, 100);

    console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω');
    showToast('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω', true);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è 404 –æ—à–∏–±–∫–∏  
    const errorMessages = {
      '404': '–û—Ç—á—ë—Ç–∞ –Ω–µ—Ç',
      '409': '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      'default': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª'
    };

    const errorMessage = errorMessages[error.message.match(/404|409/)?.[0]] || errorMessages.default;
    
    showToast(errorMessage, false);
  } finally {
    if (downloadBtn) {
      downloadBtn.disabled = false;
      downloadBtn.classList.remove('loading');
    }
  }
}
// ===== –ú–û–î–£–õ–¨ 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–º–µ—á–∞–Ω–∏–π =====

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–º–µ—á–∞–Ω–∏—è"
 * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 */
async function handleStartRemarks(event, options = {}) {
  console.log('‚öôÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–º–µ—á–∞–Ω–∏–π...');
  
  const remarksInput = document.getElementById('remarks-input');
  const files = remarksInput.files;
  
  if (!files || files.length === 0) {
    showToast('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã —Å –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏', false);
    return;
  }
  
  const startBtn = document.getElementById('start-remarks');
  //const loadingIndicator = document.getElementById('remarks-loading');
  
  startBtn.disabled = true;
  startBtn.classList.add('loading');
  //loadingIndicator.hidden = false;

  try {
    // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
      const file = files[0];
      
      if (!file) {
        console.warn(`–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        throw new Error(`–û—à–∏–±–∫–∞ —Ñ–∞–π–ª–∞ ${file.name}: –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      }
      
      const formData = new FormData();
      formData.append('file', file);
      
      
      const response = await fetch(
        `${endpoints.loadFile}${options.projectID}${endpoints.remarks}`, 
        {
          method: 'POST',
          body: formData
        }
      );
      

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 404 –æ—à–∏–±–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ  
      if (response.status === 404) {
        throw new Error('404 –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }
      if (response.status === 409) {
        throw new Error('409 –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      }

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞! –°—Ç–∞—Ç—É—Å: ${response.status}`);  
      }
      
      
      const result = await response.json();
      console.log(`‚úÖ –§–∞–π–ª ${file.name} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:`, result);
    
      
      showToast(`–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–∞`, true);
      console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–∞');  
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω—Ü–∏–∏:', error);
    const errorMessages = {
      '404': '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      '409': '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      'default': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª'
    };

    const errorMessage = errorMessages[error.message.match(/404|409/)?.[0]] || errorMessages.default;
    showToast(errorMessage, false);
  } finally {
    startBtn.disabled = false;
    startBtn.classList.remove('loading');
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å —Ä–µ–µ—Å—Ç—Ä"
 * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 */
async function handleDownloadRemarks(event, options = {}) {
  console.log('üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ä–µ–µ—Å—Ç—Ä –∑–∞–º–µ—á–∞–Ω–∏–π...');
  
  const downloadBtn = document.getElementById('download-remarks');
  if (downloadBtn) {
    downloadBtn.disabled = true;
    downloadBtn.classList.add('loading');
  }

  //const url = endpoints.projects + options.projectID + "/remarks_clustered";
  const url = `${endpoints.projects}${options.projectID}${endpoints.remarks_clustered}`;
  try {
    const response = await fetch(url, {
      method: 'GET',
      headers: {
        'Accept': 'application/octet-stream'
      }
    });

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 404 –æ—à–∏–±–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ  
    if (response.status === 404) {
      throw new Error('404 –û—Ç—á—ë—Ç–∞ –Ω–µ—Ç');
    }
    if (response.status === 409) {
      throw new Error('409 –û—Ç—á—ë—Ç –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞! –°—Ç–∞—Ç—É—Å: ${response.status}`);  
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Content-Disposition  
    const contentDisposition = response.headers.get('Content-Disposition');
    let filename = 'remarks_report.pdf'; // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é  
    // if (contentDisposition) {
    //   const filenameMatch = contentDisposition.match(/filename="?(.+)"?/);
    //   if (filenameMatch) filename = filenameMatch[1];
    // }

    // –ü–æ–ª—É—á–∞–µ–º blob  
    const blob = await response.blob();
    
    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è  
    const downloadUrl = window.URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = downloadUrl;
    link.download = filename;
    link.style.display = 'none';
    document.body.appendChild(link);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ  
    link.click();
    
    // –û—á–∏—â–∞–µ–º  
    setTimeout(() => {
      document.body.removeChild(link);
      window.URL.revokeObjectURL(downloadUrl);
    }, 100);

    console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω');
    showToast('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω', true);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è 404 –æ—à–∏–±–∫–∏  
    const errorMessages = {
      '404': '–û—Ç—á—ë—Ç–∞ –Ω–µ—Ç',
      '409': '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      'default': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª'
    };

    const errorMessage = errorMessages[error.message.match(/404|409/)?.[0]] || errorMessages.default;
    
    showToast(errorMessage, false);
  } finally {
    if (downloadBtn) {
      downloadBtn.disabled = false;
      downloadBtn.classList.remove('loading');
    }
  }
}

// ===== –ú–û–î–£–õ–¨ 3: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ =====

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª"
 * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 */
async function handleMakeProtocol(event, options = {}) {
  console.log('üìÑ –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª...');
  
  const protocolBtn = document.getElementById('make-protocol');
  const loadingIndicator = document.getElementById('protocol-loading');
  
  protocolBtn.disabled = true;
  protocolBtn.classList.add('loading');
  loadingIndicator.hidden = false;

  const requestData = {
  };

  try {
    const response = await fetch(
      `${endpoints.projects}${options.projectID}${endpoints.finalReport}`, 
      { 
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestData)
      });

    if (!response.ok) {
      const errorData = await response.json();
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
      let errorMessage;
      if (response.status === 404) {
        errorMessage = '–ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω (404)';
      } else if (response.status === 409) {
        errorMessage = '–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ (409)';
      } else {
        errorMessage = errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞';
      }
      
      throw new Error(errorMessage);
    }

    const data = await response.json();
    console.log('‚úÖ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–æ:', data);
    showToast('–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–æ', true);
    return data;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞:', error);
    
    const errorMessages = {
      '404': '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞',
      '409': '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      'default': '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏'
    };

    const errorMessage = errorMessages[error.message.match(/404|409/)?.[0]] || errorMessages.default;
    
    showToast(errorMessage, false);
    showToast(userMessage, false);
    throw error;
  } finally {
    if (protocolBtn) {  // –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å saveBtn –Ω–∞ protocolBtn
      protocolBtn.disabled = false;
      protocolBtn.classList.remove('loading');
      loadingIndicator.hidden = true;
    }
  }
}


/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª"
 * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
 * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
 */
async function handleDownloadProtocol(event, options = {}) {
  console.log('üì• –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç...');
  
  const downloadBtn = document.getElementById('download-protocol');
  if (downloadBtn) {
    downloadBtn.disabled = true;
    downloadBtn.classList.add('loading');
  }

  const url = `${endpoints.projects}${options.projectID}${endpoints.finalReport}`;
  try {
    const response = await fetch(url, {
      method: 'GET',
      headers: {
        'Accept': 'application/octet-stream'
      }
    });

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 404 –æ—à–∏–±–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ  
    if (response.status === 404) {
      throw new Error('404 –û—Ç—á—ë—Ç–∞ –Ω–µ—Ç');
    }
    if (response.status === 409) {
      throw new Error('409 –û—Ç—á—ë—Ç –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞! –°—Ç–∞—Ç—É—Å: ${response.status}`);  
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Content-Disposition  
    const contentDisposition = response.headers.get('Content-Disposition');
    let filename = 'report.xlsx'; // –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é  
    if (contentDisposition) {
      const filenameMatch = contentDisposition.match(/filename="?(.+)"?/);
      if (filenameMatch) filename = filenameMatch[1];
    }

    // –ü–æ–ª—É—á–∞–µ–º blob  
    const blob = await response.blob();
    
    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è  
    const downloadUrl = window.URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = downloadUrl;
    link.download = filename;
    link.style.display = 'none';
    document.body.appendChild(link);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ  
    link.click();
    
    // –û—á–∏—â–∞–µ–º  
    setTimeout(() => {
      document.body.removeChild(link);
      window.URL.revokeObjectURL(downloadUrl);
    }, 100);

    console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω');
    showToast('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω', true);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è 404 –æ—à–∏–±–∫–∏  
    const errorMessages = {
      '404': '–û—Ç—á—ë—Ç–∞ –Ω–µ—Ç',
      '409': '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
      'default': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª'
    };

    const errorMessage = errorMessages[error.message.match(/404|409/)?.[0]] || errorMessages.default;
    
    showToast(errorMessage, false);
  } finally {
    if (downloadBtn) {
      downloadBtn.disabled = false;
      downloadBtn.classList.remove('loading');
    }
  }
}

// ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—à—É—Ä–µ–Ω—Å–∞
 * @param {Object} result - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
 */
function showAssuranceResult(result) {
  const resultElement = document.getElementById('assurance-result');
  const badge = document.getElementById('verdict-badge');
  const reasonsList = document.getElementById('verdict-reasons');
  
  if (resultElement && badge && reasonsList) {
    badge.textContent = result.title || '‚Äî';
    badge.className = 'badge ' + (result.verdict === 'ok' ? 'ok' : 'fail');
    
    reasonsList.innerHTML = '';
    if (result.reasons && Array.isArray(result.reasons)) {
      result.reasons.forEach(reason => {
        const li = document.createElement('li');
        li.textContent = reason;
        reasonsList.appendChild(li);
      });
    }
    
    resultElement.hidden = false;
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç toast —Å–æ–æ–±—â–µ–Ω–∏–µ
 * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {boolean} isSuccess - –£—Å–ø–µ—à–Ω–æ–µ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
function showToast(message, isSuccess = true) {
  const toast = document.getElementById('toast');
  const toastMsg = document.getElementById('toast-msg');
  
  if (toast && toastMsg) {
    toastMsg.textContent = message;
    toast.classList.toggle('bad', !isSuccess);
    toast.hidden = false;
    toast.classList.add('show');
    
    setTimeout(() => {
      toast.classList.remove('show');
    }, 2400);
  }
}

// ===== –≠–ö–°–ü–û–†–¢ –§–£–ù–ö–¶–ò–ô –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø =====

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.moduleHandlers = {
  // –ú–æ–¥—É–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ —á–µ–∫-–ª–∏—Å—Ç—É
  startAssurance: handleStartAssurance,
  //checkResult: handleCheckResult,
  downloadAssurance: handleDownloadAssurance,
  sendAssuranceDocuments: sendAssuranceDocuments,
  
  // –ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–º–µ—á–∞–Ω–∏–π
  startRemarks: handleStartRemarks,
  downloadRemarks: handleDownloadRemarks,
  
  // –ú–æ–¥—É–ª—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
  makeProtocol: handleMakeProtocol,
  downloadProtocol: handleDownloadProtocol,
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  showToast: showToast,
  showAssuranceResult: showAssuranceResult,

  //—Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
  createProject: createProject
};

console.log('‚úÖ –ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏:', Object.keys(window.moduleHandlers));
